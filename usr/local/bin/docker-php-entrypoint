#!/bin/bash -x
set -e

#Show PHP versions
echo "----- versions"
version=$(php -v | grep -Eo "PHP [0-9\.]+");
echo "PHP          --> $version"
version=`composer --version | grep -Po '\d.\d.\d '`
echo "Composer     --> $version"

cd /data/code || exit 1

# first arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
	set -- php-fpm "$@"
fi

#init mail folders
mkdir -p /data/code/var/log /data/code/var/cache /data/code/public/build/mails /data/code/.dev/mails
touch /data/code/public/build/mails/base.css
touch /data/code/public/build/mails/contact.css

if [ "$APP_ENV" != 'prod' ]; then
    # fix access rights to cache:
    # our composer installs created them with root owner, while apache runs as www
    echo "------ Remap www-data to composer.json owner (dev for devs and www-data service for production)"
    export REF_OWNER_FILE=/data/code/composer.lock
    DEV_UID="$(stat -c %u $REF_OWNER_FILE)"
    export DEV_UID
    DEV_GID="$(stat -c %g $REF_OWNER_FILE)"
    export DEV_GID
    if [ "$DEV_UID" != "0" ] || [ "$DEV_GID" != "0" ]; then
        groupmod -g "$DEV_GID" www-data || true
        usermod -u "$DEV_UID" -g "$DEV_GID" -s /usr/sbin/nologin www-data || true
        chown -R "$DEV_UID":"$DEV_GID" \
            /data/code/var/log \
            /data/code/var/cache \
            /data/code/var/files \
            /.composer \
        ;
    fi

    # install composer
    /usr/local/sbin/install_composer.sh

    # install dependencies
    /usr/local/bin/composer install --prefer-dist --no-progress --no-interaction

    echo -n "------ Waiting for db to be ready..."
    until HOZANA_DB_URL=mysql://root:secret@db:3306/hozana bin/console doctrine:query:sql "SELECT 1" > /dev/null 2>&1; do
        echo -n .
        sleep 5
    done
    sleep 10
    echo "\n db is UP!"

    apt update && apt install -y rsync default-mysql-client pv

    # TEST Schema environment
    if [ "$APP_ENV" = 'dev' ] || [ "$APP_ENV" = 'test' ] || [ "$APP_ENV" = 'ci' ]; then
        if [ "$APP_ENV" != 'dev' ]; then
            HOZANA_DB_URL=mysql://root:secret@db:3306/hozana_test bin/console doctrine:database:drop --if-exists -e test --force
            HOZANA_CRM_DB_URL=mysql://root:secret@db:3306/hozana_crm_test bin/console doctrine:database:drop --connection=crm --if-exists --force -e test
        fi
        HOZANA_DB_URL=mysql://root:secret@db:3306/hozana_test bin/console doctrine:database:create --if-not-exists
        HOZANA_CRM_DB_URL=mysql://root:secret@db:3306/hozana_crm_test bin/console doctrine:database:create --connection=crm --if-not-exists
        HOZANA_DB_URL=mysql://root:secret@db:3306/hozana bin/console doctrine:database:create --if-not-exists
        HOZANA_CRM_DB_URL=mysql://root:secret@db:3306/hozana_crm bin/console doctrine:database:create --connection=crm --if-not-exists
    fi
fi

# connecting and creating db structure
echo "----- migrate database"
./bin/console doctrine:cache:clear-metadata -vvv
./bin/console doctrine:cache:clear-metadata -vvv --em=crm
./bin/console doctrine:migrations:migrate latest -v --no-interaction
./bin/console doctrine:migrations:migrate latest -v --no-interaction --em=crm

yarn install && yarn build
bin/console asset:install

if [ "$APP_ENV" != 'prod' ]; then
    echo "----- load fixtures"
    bin/console doctrine:cache:clear-metadata -vvv
    bin/console doctrine:cache:clear-metadata -vvv --em=crm

    bin/console api:elasticsearch:init

    # check if we need to load fixtures for first bootstrap
    NEED_FIXTURES=$(bin/console doctrine:query:sql 'SELECT COUNT(guide_id) FROM guides' | egrep "[0-9]+" | sed 's/[^0-9]//g')
    if [ "$NEED_FIXTURES" = '0' ]; then
        NEED_FIXTURES='true'
    fi
    if [ "$APP_ENV" = 'dev' ] && [ "$NEED_FIXTURES" = 'true' ]; then
        bin/console doctrine:fixtures:load --group=crm_minimal -vv -n --em=crm --purge-with-truncate
        bin/console doctrine:fixtures:load --group=hoz_minimal -vv -n --purge-with-truncate
    fi

    bin/console api:elasticsearch:index
fi

# build assets
yarn && yarn build
chown -R www-data:www-data /data/code/var/log /data/code/var/cache /data/code/public/build/mails

if [ "$APP_ENV" = 'test' ] || [ "$APP_ENV" = 'ci' ] ; then
    echo "To run your tests you can connect to the contaienr and run:

    bin/phpunit -d memory_limit=3000M --verbose --debug

    "
fi

if [ "$APP_ENV" != 'prod' ]; then
    echo "
    If everything went smoothly, you may now connect to http://admin.hozana.local/login with :
        username: admin@hozana.org
        password: admin
        "
fi

exec "$@"
